name: Build and Push PostgreSQL Integrated Docker Images

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  # pull_request:
  #   branches:
  #     - main
  #     - master
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_BASE_NAME: ${{ github.repository }}/dbpill-postgres

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        pg_version: ['18', '17', '16', '15', '14', '13']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-pg${{ matrix.pg_version }}
            type=ref,event=pr,suffix=-pg${{ matrix.pg_version }}
            type=semver,pattern={{version}},suffix=-pg${{ matrix.pg_version }}
            type=semver,pattern={{major}}.{{minor}},suffix=-pg${{ matrix.pg_version }}
            type=semver,pattern={{major}},suffix=-pg${{ matrix.pg_version }}
            type=raw,value=pg${{ matrix.pg_version }},enable={{is_default_branch}}
            type=raw,value=latest,enable=${{ matrix.pg_version == '17' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.integrated
          build-args: |
            PG_VERSION=${{ matrix.pg_version }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=pg${{ matrix.pg_version }}
          cache-to: type=gha,mode=max,scope=pg${{ matrix.pg_version }}
          platforms: linux/amd64,linux/arm64
